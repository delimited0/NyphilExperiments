library(stringr)
source("../dataFuncs.R")
pwd
pwd()
path()
?source
source('~/Documents/Projects/TopicModel/loadData.R', echo=TRUE)
opinion <- readArticles("/Users/patrickding/Documents/Projects/TopicModel/opinion.csv")
opinion[1,]
opinion[2,]
opinion[2,]$italic
opinion[2,]$article
source("/Users/patrickding/Documents/Projects/TopicModel/dataFuncs.R")
opinion <- readArticles("/Users/patrickding/Documents/Projects/TopicModel/opinion.csv")
opinion[1,]
opinion[1,]$italic
opinion[1,]$italic == " "
opinion[1,]$italic == "  "
opinion[1,]$italic == "   "
opinion[1,]$italic == "\et"
opinion[1,]$italic == "\t"
opinion[1000,]$italic == "\t"
opinion[1000,]$italic
opinion[2000,]$italic
opinion[200,]$italic
opinion[2001,]$italic
opinion[3001,]$italic
!%in
3 !%in c(3,4,5)
!(3 %in c(33442))
!(3 %in% c(33442))
3 !%in% c(3,4,5)
3 !(%in% c(3,4,5))
View(opinion)
colnames(opinion)
opinion$kicker
View(opinion$kicker)
cartoon_idx <- str_detect(opinion$kicker, ignore.case("cartoon"))
cartoon_idx
opinion$kicker
cartoon_idx
cartoon_idx[7322]
cartoon_idx[7322]
cartoon_idx[7323]
opinion$kicker[7323]
opinion$kicker
opinion$kicker[1000:2000]
opinion[1461,]
opinion[1462,]
opinion[1460,]
opinion$kicker[2000:3000]
opinion$kicker[3000:4000]
opinion$kicker[4000:5000]
opinion$kicker[5000:6000]
opinion.docs <- transformCorpus(Corpus(VectorSource(opinion$article[!cartoon_idx])))
length(opinion.docs)
opinion.dtm <- DocumentTermMatrix(opinion.docs)
dim(opinion.dtm)
opinion.dtm.count <- rowSums(as.matrix(opinion.dtm))
sum(opinion.dtm.count==0)
opinion.dtm.zero.idx <- which(opinion.dtm.count == 0)
opinion.docs <- Corpus(VectorSource(opinion$article[-opinion.dtm.zero.idx]))
opinion.dtm <- DocumentTermMatrix(transformCorpus(opinion.docs))
period_identity <- function(dates, level) {
# periodIdentity
# Creates vector of period identities, such that documents with same
# level are assigned to the same period
# Requires lubridate
# dates - vector, dates
# level - function, that gets time level from a date. eg, "month"
dates <- dates[order(dates)]
identity <- rep(1, length(dates))
currIdentity <- 1
prevLevel <- level(dates[1])
for (i in 2:length(dates)) {
currLevel <- level(dates[i])
if (currLevel != prevLevel)
currIdentity <- currIdentity + 1
identity[i] <- currIdentity
prevLevel <- currLevel
}
return(identity)
}
period_identity(opinion, "monht")
period_identity(opinion, "month")
period_identity(opinion$date, "month")
level
factor
level
base::level
foo = period_identity(opinion$date, month)
foo
dir()
ls9)
ls()
opinion <- readArticles("/Users/patrickding/Documents/Projects/TopicModel/opinion.csv")
opinion_docs <- transformCorpus(Corpus(VectorSource(opinion$article)))
rm(opinion.docs)
rm(opinion.dtm)
opinion_dtm <- DocumentTermMatrix(opinion_docs)
opinion_dtm_count <- rowSums(as.matrix(opinion_dtm))
opinion_dtm_zero_idx <- which(opinion_dtm_count == 0)
opinion_docs <- Corpus(VectorSource(opinion$article[-opinion_dtm_zero_idx]))
opinion_dtm <- DocumentTermMatrix(opinion_docs)
dim(opinion_dtm)
opinion_docs <- Corpus(VectorSource(opinion$article[-opinion_dtm_zero_idx,]))
opinion_docs <- transformCorpus(Corpus(VectorSource(opinion$article[-opinion_dtm_zero_idx])))
opinion_dtm <- DocumentTermMatrix(opinion_docs)
dim(opinion_dtm)
period
periods
document
doc
opinion_dtm[1,]
typeof(opinion_dtm[1,])
is.object(opinion_dtm[1,])
isS4(opinion_dtm[1,])
class(opinion_dtm[1,])
class(opinion_dtm[1,]) == "DocumentTermMatrix"
if(class(opinion_dtm[1,]) == "DocumentTermMatrix")
print(hi)
library(topicmodels)
?dtm2ldaformat
opinion_docs <- transformCorpus(Corpus(VectorSource(opinion$article)))
opinion_dtm <- DocumentTermMatrix(opinion_docs)
opinion_dtm_count <- rowSums(as.matrix(opinion_dtm))
opinion_dtm_zero_idx <- which(opinion_dtm_count == 0)
opinion_dat = dtm2ldaformat(opinion_dtm)
dim(opinion_dat[1])
dim(opinion_dat[[1])
dim(opinion_dat[[1]])
dim(opinion_dat[[2]])
opinion_dat[[1]]
length(opinion_dat[[1]])
opinion_dat[[1]][1]
library(lda)
?lexicalize
opinion_dat$vocav
opinion_dat$vocab
opinion_dat$vocab[1]
opinion_dat$vocab[2]
opinion_dat$vocab[3]
opinion_dat$vocab[4]
opinion_dat$vocab[5]
opinion_dat$vocab[6]
opinion_dat$vocab[7]
opinion_dat$vocab[10]
opinion_dat$vocab[100]
opinion_dat$vocab[120]
opinion_dat$vocab[130]
opinion_dat$documents[[2]][1]
opinion_dat$documents[[1]]
opinion_dat$documents[[2]]
class(opinion_dat)
class("DocumentTermMatrix")
typeof(opinion_dat$documents[[1]])
class(opinion_dat$documents[[1]])
class(opinion_dat$documents)
?Map
length(opinion_dat$vocab)
dim(opinion_dtm)
union(opinion_dat$documents[1,])
union(Map(function(x){x[1,]}, opinion_dat$documents))
union(Map(function(x){x}, opinion_dat$documents))
?"union"
opinion_dat$documents[[1]][1,]
opinion_dat$documents[[1]][1000,]
opinion_dat$documents[[1000]][1,]
opinion_dat$documents[[6000]][1,]
union
Reduce(union, Map(function(x){x[1,]}, opinion_dat$documents))
length(Reduce(union, Map(function(x){x[1,]}, opinion_dat$documents)))
class(opinion_dat)
docs$documents
corpus
length(opinion_dat$documents)
max(Map(function(x){sum(x[2,])}, opinion_dat$documents)
)
max(Map(function(x){sum(x[2,])}, opinion_dat$documents))
Reduce(max, Map(function(x){sum(x[2,])}, opinion_dat$documents))
Map(function(x){sum(x[2,])}, opinion_dat$documents)
unlist(Map(function(x){sum(x[2,])}, opinion_dat$documents))
max(unlist(Map(function(x){sum(x[2,])}, opinion_dat$documents)))
Reduce(max, Map(function(x){sum(x[2,])}, opinion_dat$documents))
max(unlist(Map(function(x){sum(x[2,])}, opinion_dat$documents)))
periods
foo
vector(mode="list", length=3)
p
opinion_dat
documents[[foo==1]]
corpus$documents[[foo==1]]
opinion_dat$documents[[foo==1]]
?Filter
bar
bar = list(3,4,5,2,5,6,2)
bar
bar[[3:5]]
bar[3:5]
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t()
baz = corpus_seq_t(opinion_dat, periods)
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
Map(function(x){sum(x[2,])},
opinion_dat$documents)
Reduce(max, Map(function(x){sum(x[2,])},
opinion_dat$documents))
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
baz = corpus_seq_t(opinion_dat, foo)
class(doc)
class(doc) != "matrix"
baz = corpus_seq_t(opinion_dat, foo)
docs_by_period[[1]]
docs_by_period[[2]]
Reduce(min, Map(function(x){length(x)},docs_by_period[[2]]))
Reduce(ax, Map(function(x){length(x)},docs_by_period[[2]]))
Reduce(max, Map(function(x){length(x)},docs_by_period[[2]]))
Reduce(max, Map(function(x){length(x)},docs_by_period))
Reduce(min, Map(function(x){length(x)},docs_by_period))
Map(function(x){length(x)},docs_by_period)
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
doc
typeof(doc)
class(doc)
class(doc)
class(doc) == "matrix"
source('~/Documents/Projects/TopicModel/dtm/data.R')
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
opinion_dat$documents[[148]]
class(opinion_dat$documents[[148]])
opinion_dat$documents[[148]][1,]
rep(1,0)
source('~/Documents/Projects/TopicModel/dtm/data.R')
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
NULL
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
docs_by_period[[148]]
docs_by_period[[147]]
docs_by_period[[1]]
docs_by_period[[2]]
docs_by_period[[3]]
docs_by_period[[4]]
unique(periods)
unique(foo)
foo == 1
which(foo == 1)
which(foo == 148)
which(foo == 147)
which(foo == 146)
which(foo == 145)
which(foo == 144)
which(foo == 143)
which(foo == 142)
which(foo == 141)
periods==p
foo==1000
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
p
periods==p
length(corpus$documents)
length(foo)
dim(opinion_dtm)
opinion_dtm_count <- rowSums(as.matrix(opinion_dtm))
opinion_dtm_zero_idx <- which(opinion_dtm_count == 0)
periods = period_identity(opinion$date[-opinion_dtm_zero_idx])
periods = period_identity(opinion$date[-opinion_dtm_zero_idx], month)
periods
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
debugSource('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, foo)
docs_by_period
docs_by_period[[148]]
docs_by_period[[147]]
docs_by_period[[14]]
docs_by_period[[146]]
p
periods
rm(foo)
baz = corpus_seq_t(opinion_dat, periods)
baz
names(baz)
baz$len
baz$corpi
baz$corpi$docs[[1]]
baz$corpi$docs[[2]]
baz$corpi$docs
baz$corpi[[1]]
baz$corpi[[1]]$docs
baz$corpi[[1]]$docs[[1]]
source('~/Documents/Projects/TopicModel/dtm/data.R')
baz = corpus_seq_t(opinion_dat, periods)
source('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
vector(mode="numeric", length=3)
source('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
source('~/Documents/Projects/TopicModel/dtm/data.R')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/dtm/lda.cpp')
system('pwd')
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_vem.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_vem.cpp')
3.3 + 3.7 + 4 + 3 + 3.7 + 4 + 3 + 3.7 + 3.7 + 3.3 + 3.7 + 3.7 + 4 + 3.3 + 3 + 3.3 + 3.3 + 3.7 + 3.7 + 3.3 + 3.7 + 4 + 3.7 + 3.7 + 3 + 3 + 4 + 3.3 + 3.7 + 4 + 4 + 4
114.5/32
114.5/31
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_gibbs.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_gibbs.cpp')
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_gibbs.cpp')
library(lubridate)
library(tm)
library(stringr)
source("/Users/patrickding/Documents/Projects/TopicModel/dataFuncs.R")
source("/Users/patrickding/Documents/Projects/TopicModel/dtm_funcs.R")
data(acq)
Rcpp::sourceCpp('Documents/Projects/TopicModel/topicmodel/lda_gibbs.cpp')
source('~/Documents/Projects/TopicModel/topicmodel/lda.R')
acq_lda <- lda(DocumentTermMatrix(acq), K=10, method="gibbs")
acq_lda$beta
class(acq_lda)
opinion <- readArticles("/Users/patrickding/Documents/Projects/TopicModel/opinion.csv")
#cartoon_idx <- str_detect(opinion$kicker, ignore.case("cartoon"))
#keep.idx <- opinion$article != "  " # cartoons have no text, drop them
#opinion.docs <- transformCorpus(Corpus(VectorSource(opinion$article[!cartoon_idx])))
opinion.docs <- transformCorpus(Corpus(VectorSource(opinion$article)))
opinion.dtm <- DocumentTermMatrix(opinion.docs)
opinion.dtm.count <- rowSums(as.matrix(opinion.dtm))
opinion.dtm.zero.idx <- opinion.dtm.count == 0
opinion.docs <- transformCorpus(Corpus(VectorSource(opinion$article[!opinion.dtm.zero.idx])))
opinion.dtm <- DocumentTermMatrix(opinion.docs)
opinion.dtm <- removeSparseTerms(opinion.dtm, sparse=.99)
opinion_lda <- lda(dtm=opinion.dtm, K = 10, method = "gibbs")
rowSums(opinion_lda$beta)
colSums(opinion_lda$beta)
plot(lgamma(1:100))
lines(lgamma(1:100))
lines(lgamma(1:100))
plot.new
plot.new()
lines(lgamma(1:100))
plot9)
plot()
rpois(10)
rpois(10, 1)
rpois(1, 1)
rpois(1, 100)
rpois(1, 2)
rbinom(n=1, size=100, prob = .2)
rbinom(n=1, size=100, prob = .2)
rbinom(n=1, size=100, prob = .2)
rbinom(n=1, size=100, prob = .2)
rbinom(n=1, size=100, prob = .2)
rbinom(n=1, size=100, prob = .2)
rbinom(n=1, size=100, prob = .2)
rbinom(n=1, size=100, prob = .2)
rbinom(n=1, size=100, prob = .2)
rbinom(n=1, size=100, prob = .2)
log_gammas <- rbinom(n=100, size=50, prob=.2)
hist(log_gammas)
counts <- rbinom(n=100, size=50, prob=.2)
e_log_gammas <- lgamma(counts)
mean(e_log_gammas)
lgamma(.2)
lgamma(.2*50)
probs <- seq(from=0, to = 1, by = .1)
counts <- apply(probs, 1, function(x) rbinom(n=100, size=50, prob=x))
counts <- sapply(probs, 1, function(x) rbinom(n=100, size=50, prob=x))
counts <- sapply(probs, function(x) rbinom(n=100, size=50, prob=x))
counts
e_log_gammas <- lgamma(counts)
warnings9)
warnings())
warnings()
lgamma(0)
probs <- seq(from=.1, to = 1, by = .1)
counts <- sapply(probs, function(x) rbinom(n=100, size=50, prob=x))
e_log_gammas <- lgamma(counts)
probs
counts
e_log_gammas
mean(e_log_gammas)
rowMeans(e_log_gammas)
counts
colMeans(e_log_gammas)
lgamma(probs*50)
actual <- colMeans(e_log_gammas)
approx <- lgamma(probs*50)
plot(x=probs, y= cbind(actual, approx))
plot(x=probs, y= rbind(actual, approx))
plot(x=probs, y= actual)
plot(x=probs, y=list(actual, approx))
cbind(actual, approx)
plot(cbind(actual, approx))
plot(x=probs, cbind(actual, approx))
plot(x=t(probs), cbind(actual, approx))
probs <- seq(from=.1, to = 1, by = .1)
counts <- sapply(probs, function(x) rbinom(n=100, size=10, prob=x))
e_log_gammas <- lgamma(counts)
actual <- colMeans(e_log_gammas)
approx <- lgamma(probs*50)
probs <- seq(from=.1, to = 1, by = .1)
counts <- sapply(probs, function(x) rbinom(n=100, size=10, prob=x))
e_log_gammas <- lgamma(counts)
e_log_gammas
actual <- colMeans(e_log_gammas)
approx <- lgamma(probs*50)
plot(actual, approx)
approx
actual
probs <- seq(from=.1, to = 1, by = .1)
counts <- sapply(probs, function(x) rbinom(n=100, size=100, prob=x))
e_log_gammas <- lgamma(counts)
actual <- colMeans(e_log_gammas)
approx <- lgamma(probs*50)
plot(actual, approx)
actual
approx
e_log_gammas
actual
approx
2780*12
5700*4
62/3
ver
# homework 9
L1 <- -2
L2 <- -1
A <- matrix(data = c(0, 1, -2, -3), nrow = 2, byrow = TRUE)
v1 <- c(-1, 2)
v2 <- c(1, -1)
P <- cbind(v1, v2); D <- diag(c(L1,L2))
PInv <- solve(P)
Aexp <- function(t) P%*%diag(c(exp(L1*t),exp(L2*t)))%*%PInv
par(mar=c(1,1,1,1)) #leave room at bottom for the equation
plot(NULL, xlim = c(-2,2),ylim = c(-2,2), xlab = "", ylab = "", axes = FALSE,
asp = 1, pch = 20)
axis(1, pos = 0); axis(2, pos = 0)
v0 <- c(1,0)
times <- seq(from = 0, to =2, by = 0.1)
for (t in times)
points((Aexp(t)%*%v0)[1], (Aexp(t)%*%v0)[2], pch = 20 )
v0 <- c(0, 1)
for (t in times)
points((Aexp(t)%*%v0)[1], (Aexp(t)%*%v0)[2], pch = 20, col = "green" )
v0 <- c(1, -3)
for (t in times)
points((Aexp(t)%*%v1)[1], (Aexp(t)%*%v1)[2], pch = 20, col = "red" )
library(numDeriv)
# 9 ----
f <- function(v) c(v[1]^(3/4) * v[2]^(1/3) + v[1],
v[1]^(1/4) * v[2]^(2/3) + v[2])
x0 <- c(16, 8)
x <- x0
y <- c(24, 24)
iter <- 0
while (sum((f(x) - y)^2) > 1e-6) {
D <- jacobian(f, x)
Dinv <- solve(D)
x <- x - Dinv %*% (f(x) - y)
iter <- iter + 1
}
x
core_scores <- c(4, 3.3, 3, 3.7, 3.3)
core_scores <- c(4, 3.3, 3, 3.7, 3.3, 3.3)
A_courses <- c("ORF473", "ORF309", "ORF363")
aminus_courses <- c("ECO310", "ORF405", "ECO362", "COS217", "ORF350")
dept_scores <- c(rep(4, 3), rep(3.7, 4), 3.3)
dept_scores <- c(rep(4, 3), rep(3.7, 4), 3.3, rep(4, 2))
mean(dept_scores)
aminus_courses <- c("ECO310", "ORF405", "ECO362", "ORF335", "ORF350")
dept_scores <- c(rep(4, 3), rep(3.7, 3), rep(3.3, 2), rep(4, 2))
mean(dept_scores)
10950.51*.7
10950.51*.7/56.72
10950.51*.2/29.79
10950.51*.1/42.07
135.14*56.72
26*42
setwd("~/Documents/Projects/PerformanceHistory")
ls()
dir()
